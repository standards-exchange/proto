syntax = "proto3";

package standards.open.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/resource.proto";
import "google/type/money.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/type/date.proto";

option go_package = "github.com/standards-exchange/protobuf-go/standards/open/v1";


// Transfer Agency KPI Report for governance oversight and reporting for UCITS funds
message RT000ZR69 {
    // The effective date as of which the data is accurate
    google.type.Date effective_date = 1;
    // The date data was produced
    google.type.Date production_date = 3;
    // The legal identifier of the umbrella
    // Should conform to: https://openfunds.org/OFST005010 (Umbrella)
    // See: https://openfunds.org/knowledge/whitepapers/fundnames/ for more information
    string umbrella_fund = 4;
    // Name of the relevant sub-fund
    // Should conform to: https://openfunds.org/OFST010110 (Legal Fund Name Only)
    // Refers to the Sub-Fund in the case of an umbrella structure
    // or Fund in the case of a standalone structure
    // See: https://openfunds.org/knowledge/whitepapers/fundnames/ for more information
    string fund = 5;
    // The definition of an account resource
    message Account {
        // The resource name of the client
        string display_name = 1;
        // Types of account holders
        enum AccountType {
            // AccountType unspecified
            TYPE_UNSPECIFIED = 0;
            // The account holder is a natural person
            NATURAL_PERSON = 1;
            // The account holder is a legal entity
            LEGAL_ENTITY = 2;
        }
        // The type of account
        AccountType account_type = 2;
        // The internal unique identifier of the account
        string account_id = 3;
        // The status of the account (i.e. active or inactive)
        Status status = 6;
        // Enumerations of the status of the account
        enum Status {
            // Account status unspecified
            STATE_UNSPECIFIED = 0;
            // Account status active
            ACTIVE = 1;
            // Account status inactive
            INACTIVE = 2;
        }
        // The risk categorization of the client (i.e. low, medium or high)
        Risk risk = 7;
        // Enumerations of the risk categorizations
        enum Risk {
            // Client risk unspecified
            RISK_UNSPECIFIED = 0;
            // The client is deemed low risk
            LOW = 1;
            // The client is deemed medium risk
            MEDIUM = 2;
            // The client is deemed high risk
            HIGH = 3;
        }
        // Whether the client has a purchase stop
        bool purchase_stop = 8;
        // Whether the client has a redemption stop
        bool redemption_stop = 9;
        // Whether the client has a stop on redemptions settling
        bool stop_red_settle = 10;
        // Whether the client has a stop on transfers in
        bool transfer_inward_stop = 11;
        // Whether the client has a stop on transfers out
        bool transfer_out_stop = 12;
        // The subscriptions (i.e. the share class holdings) of the client
        repeated Subscription subscriptions = 13;
        // Definition of a client subscription
        message Subscription {
            // The global identifier of the share class
            string share_class_id = 1;
            // Enumerations of financial identifiers
            enum ShareClassIdentifierTypes {
                // Source not specified by the user.
                IDENTIFIER_UNSPECIFIED = 0;
                // ISO 6166 code of ISIN when available
                ISIN = 1;
                // CUSIP - The Committee on Uniform Securities Identification Procedures number assigned by the CUSIP Service Bureau for U.S. and Canadian companies
                CUSIP = 2;
                // SEDOL - Stock Exchange Daily Official List for the London Stock Exchange
                SEDOL = 3;
                // WKN - Wertpapier Kenn-Nummer, the alphanumeric German identification number
                WKN = 4;
                // Bloomberg Ticker - Bloomberg letters code that identify a company's securities
                BBG_TICKER = 5;
                // BBGID - The Bloomberg Global ID
                BBGID = 6;
                // Reuters RIC - Reuters instrument code
                RIC = 7;
                // FIGI - Financial_Instrument Global Identifier
                FIGI = 8;
                // LEI - Legal Entity Identifier
                LEI = 9;
                // PermID - Refinitiv Permanent Identifiers
                PERM_ID = 10;
            }
            // Codification chosen to identify the share class
            ShareClassIdentifierTypes share_class_id_type = 2;
            // Extension that identifies the share class.
            // Should conform to: https://openfunds.org/OFST020050 (Share Class Extension)
            string share_class_extension = 3;
            // The number of settled units
            double settled_units = 4;
            // The number of unsettled units
            double unsettled_units = 5;
            // The nav of the subscription per unit
            google.type.Money nav_per_unit = 6;
            // The current total value of the subscription
            google.type.Money total_value = 7;
        }
        // The share of total shares - unsettled
        double percent_total_shares = 14;
        // The total value of the account
        google.type.Money account_value = 15;
        // The share of total aum - unsettled
        double percent_total_aum = 16;
        // The list of transactions made by the account
        repeated Transaction transactions = 17;
    }
    // Definition of a transaction
    message Transaction {
        // The resource name of the client
        string account_name = 1;
        // Types of account holders
        enum AccountType {
            // AccountType unspecified
            TYPE_UNSPECIFIED = 0;
            // The account holder is a natural person
            NATURAL_PERSON = 1;
            // The account holder is a legal entity
            LEGAL_ENTITY = 2;
        }
        // The type of account
        AccountType account_type = 2;
        // The internal unique identifier of the account
        string account_id = 3;
        // The global identifier of the share class
        string share_class_id = 4;
        // Enumerations of financial identifiers
        enum ShareClassIdentifierTypes {
            // Source not specified by the user.
            IDENTIFIER_UNSPECIFIED = 0;
            // ISO 6166 code of ISIN when available
            ISIN = 1;
            // CUSIP - The Committee on Uniform Securities Identification Procedures number assigned by the CUSIP Service Bureau for U.S. and Canadian companies
            CUSIP = 2;
            // SEDOL - Stock Exchange Daily Official List for the London Stock Exchange
            SEDOL = 3;
            // WKN - Wertpapier Kenn-Nummer, the alphanumeric German identification number
            WKN = 4;
            // Bloomberg Ticker - Bloomberg letters code that identify a company's securities
            BBG_TICKER = 5;
            // BBGID - The Bloomberg Global ID
            BBGID = 6;
            // Reuters RIC - Reuters instrument code
            RIC = 7;
            // FIGI - (Financial Instrument Global Identifier). To look up the FIGI navigate to https://www.openfigi.com/.
            FIGI = 8;
            // LEI - Legal Entity Identifier
            LEI = 9;
            // PermID - (Refinitiv Permanent Identifier). To look up the PermID navigate to https://permid.org/
            PERM_ID = 10;
        }
        // Codification chosen to identify the share class
        ShareClassIdentifierTypes share_class_id_type = 5;
        // Extension that identifies the share class.
        // Should conform to: https://openfunds.org/OFST020050 (Share Class Extension)
        string share_class_extension = 6;
        // The number of settled units subscribed to or redeeemed
        double units = 7;
        // The nav of the subscription per unit at which the transaction was priced
        google.type.Money nav_per_unit = 9;
        // The current total value of the transaction
        google.type.Money total_value = 10;
        // Enumerations of transaction types
        enum TransactionType {
            TRANSACTION_TYPE_UNSPECIFIED = 0;
            // Purchase of shares in the specified share class
            SUBSCRIPTION = 1;
            // Redemption of shares from the specified share class
            REDEMPTION = 2;
            // Movement between accounts for a single share class (ISIN), for example from PartyA to PartyB
            TRANSFER = 3;
            // Movement between share classes (i.e. ISIN) for a single account, for example PartyA switches their holdings of ShareClassA for holdings of ShareClassB
            SWITCH = 4;
        }
        // The type of transaction
        TransactionType transaction_type = 11;
    }
    // The largest N account holders by AUM.
    repeated Account largest_shareholders = 6;
    // List of blocked accounts
    repeated Account blocked_accounts = 7;
    // List of PEP accounts
    repeated Account pep_accounts = 8;
    // List of new accounts last 3 months
    repeated Account new_accounts_last_three_months = 9;
    // List of high risk accounts
    repeated Account high_risk_accounts = 10;
    // Largest N accounts by transaction volume
    repeated Account largest_accounts_by_transaction_volume = 11;
    // Definition of a Transfer Agency Breach or Error
    message TransferAgencyBreachOrError {
        // The date of the breach
        google.type.Date effective_date = 1;
        // The date the breach was identified
        google.type.Date identification_date = 2;
        // The date the breach was resolved
        google.type.Date resolution_date = 3;
        // Enumerations of the types of the breach or error.
        enum Type {
            SEVERITY_UNSPECIFIED = 0;
            // A breach or error the nature of which requires reporting to the regulator
            REGULATORY_BREACH = 1;
            // An breach or error that should be logged and reported internally
            INTERNAL_BREACH = 2;
            // An error that should be noted, but does not need to be reported
            ERROR = 3;
        }
        // The type of severity of the breach or error.
        Type type = 4;
        // Description of the breach
        string description = 5;
        // Whether the breach is active or not
        bool active = 6;
        // Resolution of the breach and underlying source of issue
        string resolution_commentary = 7;
    }
    // Transfer agency breaches in the last twelve months
    repeated TransferAgencyBreachOrError transfer_agency_breaches = 12;
    // Recent transfer agency errors. Convention is to report last twelve months
    repeated TransferAgencyBreachOrError transfer_agency_errors = 13;
    // Definition of a late trade events
    message LateTradeEvent {
        // The date of the event
        google.type.Date effective_date = 1;
        // Cause of the late trade
        string cause = 2;
        // Resolution of the breach and underlying source of issue
        string resolution = 3;
    }
    // Recent late trade events. Convention is to report last twelve months.
    repeated LateTradeEvent late_trade_events = 14;
    // List of suspicious transactions in the format:
    repeated Transaction suspicious_transactions = 15;
    // List of transactions related to PEP accounts in the format:
    repeated Transaction pep_transactions = 16;
}

// Batch set of RT000ZR69 responses
message RT000ZR69_batch {
    repeated RT000ZR69 response = 1;
}
