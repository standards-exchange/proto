syntax = "proto3";

package standards.open.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/resource.proto";
import "google/type/money.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/type/date.proto";
import "google/type/month.proto";
import "standards/open/v1/metric.proto";
import "standards/open/v1/rag.proto";

option go_package = "github.com/standards-exchange/protobuf-go/standards/open/v1";


// Transfer Agency Monthly KPI & MI Report for governance oversight and reporting for UCITS funds
message RT000ZR69 {
    // Definition of an overview message
    message Overview {
        // The effective date as of which the data is accurate
        google.type.Date effective_date = 1;
        // The reporting year
        int32 reporting_year = 2;
        // The reporting month
        google.type.Month reporting_month = 3;
        // The date data was produced
        google.type.Date production_date = 4;
        // The legal identifier of the umbrella
        // Should conform to: https://openfunds.org/OFST005010 (Umbrella)
        // See: https://openfunds.org/knowledge/whitepapers/fundnames/ for more information
        string umbrella_fund = 5;
        // Name of the relevant sub-fund
        // Should conform to: https://openfunds.org/OFST010110 (Legal Fund Name Only)
        // Refers to the Sub-Fund in the case of an umbrella structure
        // or Fund in the case of a standalone structure
        // See: https://openfunds.org/knowledge/whitepapers/fundnames/ for more information
        string fund = 6;
        // Aggregation entity
        // The name of the entity at which metrics should be aggregated for downstream reporting purposes
        string aggregation_entity = 8;
    }
    // Overview of the Transfer Monthly KPI & MI Report
    Overview overview = 1;
    // Definition of metrics
    message Metrics {
        // Total number of transactions settled during the month, excluding cash dividends
        // i.e. subscriptions, redemptions, switches in/out, dividend and trailer fee reinvestments.
        repeated MonthlyRAGMetric transactions_processed = 1;
        // The number of STP transactions processed (transactions that came across via an automated method versus manual
        // for example fax/post..etc)
        repeated MonthlyRAGMetric stp_transactions_processed = 2;
        // The STP transaction rate (stp_transactions_processed / transactions_processed)
        repeated MonthlyRAGMetric stp_transaction_rate = 3;
        //  Number of TA transactions processed correctly as a percentage of total number of TA transactions settled during the reporting month.
        repeated MonthlyRAGMetric transaction_process_accuracy = 4;
        //  Number of TA transactional errors identified during the reporting month.
        repeated MonthlyRAGMetric number_of_ta_transactional_errors_identified = 5;
        //  Number of TA operational errors identified during the reporting month.
        repeated MonthlyRAGMetric number_of_ta_operational_errors_identified = 6;
        // Value in the fund reporting currency of errors identified during the reporting month
        repeated MonthlyRAGMetric value_of_identified_errors = 7;
        // The number of complaints in the last month
        repeated MonthlyRAGMetric complaints_in_last_month = 8;
        // The number of upheld complaints in the last month
        repeated MonthlyRAGMetric complaints_upheld_in_last_month = 9;
        // The number of complaints not upheld in the last month
        repeated MonthlyRAGMetric complaints_not_upheld_in_last_month = 10;
        //  Number of accounts which had "In Good Order" AML/KYC status at month end.
        repeated MonthlyRAGMetric accounts_in_good_order = 11;
        //  Number of accounts which had "Not In Good Order" AML/KYC status at month end.
        repeated MonthlyRAGMetric accounts_not_in_good_order = 12;
        //  Number of same-day estimate reports sent
        repeated MonthlyRAGMetric estimate_reports = 13;
        //  Percentage of same-day estimate reports delayed by >15min
        repeated MonthlyRAGMetric estimate_reports_delayed = 14;
        //  Percentage of same-day estimate reports with an error
        repeated MonthlyRAGMetric estimate_reports_error = 15;
        //  Number of next-day confirmed reports sent
        repeated MonthlyRAGMetric confirmed_reports = 16;
        //  Percentage of next-day confirmed reports delayed by >15min
        repeated MonthlyRAGMetric confirmed_reports_delayed = 17;
        //  Percentage of next-day confirmed reports with an error
        repeated MonthlyRAGMetric confirmed_reports_error = 18;
        // The average amount of time (seconds) taken to respond to an email query
        repeated MonthlyRAGMetric average_email_query_time = 19;
        // The average amount of time (seconds) taken to respond to an phone query
        repeated MonthlyRAGMetric average_phone_query_time = 20;
        //  Number of system issues that occurred during the month.
        repeated MonthlyRAGMetric system_issues = 21;
    }
    // The transfer agency metrics (KPIs) over the reporting period
    Metrics metrics = 20;
    // Transfer agency breaches in the last thirteen months
    repeated TransferAgencyBreach transfer_agency_breaches = 51;
    // Recent late trade events. Convention is to report last twelve months.
    repeated LateTradeEvent late_trade_events = 53;
    // Recent complains. Convention is to report last thirteen months
    repeated Complaint complaints = 54;
    // List of suspicious transactions in the format:
    repeated Transaction suspicious_transactions = 55;
    // List of transactions related to PEP accounts
    repeated Transaction pep_transactions = 56;
    // List of transactions with a late cash receipt
    repeated Transaction late_cash_receipt_transactions = 57;
    // The largest N account holders by AUM.
    repeated Account largest_shareholders = 71;
    // List of blocked accounts
    repeated Account blocked_accounts = 72;
    // List of PEP accounts
    repeated Account pep_accounts = 73;
    // List of new accounts last 3 months
    repeated Account new_accounts_last_three_months = 74;
    // List of high risk accounts
    repeated Account high_risk_accounts = 75;
    // Largest N accounts by transaction volume
    repeated Account largest_accounts_by_transaction_volume = 76;
    // Accounts that have holdings and have dealt within the last thirteen months
    repeated Account active_accounts = 77;
    // Accounts blocked for AML reasons
    repeated Account accounts_blocked_for_aml_reasons = 78;
    // Accounts created in the last thirteen months from high risk countries
    repeated Account new_accounts_from_high_risk_countries = 79;

    // The definition of an account resource
    message Account {
        // The resource name of the client
        string display_name = 1;
        // Types of account holders
        enum AccountType {
            // AccountType unspecified
            TYPE_UNSPECIFIED = 0;
            // The account holder is a natural person
            NATURAL_PERSON = 1;
            // The account holder is a legal entity
            LEGAL_ENTITY = 2;
        }
        // The type of account
        AccountType account_type = 2;
        // The internal unique identifier of the account
        string account_id = 3;
        // The status of the account (i.e. active or inactive)
        Status status = 6;
        // Enumerations of the status of the account
        enum Status {
            // Account status unspecified
            STATE_UNSPECIFIED = 0;
            // Account status active
            ACTIVE = 1;
            // Account status inactive
            INACTIVE = 2;
            // The account is blocked
            BLOCKED = 3;
            // The account is in the process of being onboarded, but not blocked
            ONBOARDING = 4;
        }
        // The address of the account
        string address = 7;
        // The risk categorization of the client (i.e. low, medium or high)
        Risk risk = 8;
        // Enumerations of the risk categorizations
        enum Risk {
            // Client risk unspecified
            RISK_UNSPECIFIED = 0;
            // The client is deemed low risk
            LOW = 1;
            // The client is deemed medium risk
            MEDIUM = 2;
            // The client is deemed high risk
            HIGH = 3;
        }
        // Whether the client has a purchase stop
        bool purchase_stop = 9;
        // Whether the client has a redemption stop
        bool redemption_stop = 10;
        // Whether the client has a stop on redemptions settling
        bool stop_red_settle = 11;
        // Whether the client has a stop on transfers in
        bool transfer_inward_stop = 12;
        // Whether the client has a stop on transfers out
        bool transfer_out_stop = 13;
        // Whether there is a stop on the account for PEP reasons
        bool stop_pep = 14;
        // Whether there is a stop on the account for AML reasons
        bool stop_aml = 15;
        // If there is a stop, what is the stop date
        google.type.Date stop_date = 16;
        // The subscriptions (i.e. the share class holdings) of the client
        repeated Subscription subscriptions = 17;
        // Definition of a client subscription
        message Subscription {
            // The global identifier of the share class
            string share_class_id = 1;
            // Enumerations of financial identifiers
            enum ShareClassIdentifierTypes {
                // Source not specified by the user.
                IDENTIFIER_UNSPECIFIED = 0;
                // ISO 6166 code of ISIN when available
                ISIN = 1;
                // CUSIP - The Committee on Uniform Securities Identification Procedures number assigned by the CUSIP Service Bureau for U.S. and Canadian companies
                CUSIP = 2;
                // SEDOL - Stock Exchange Daily Official List for the London Stock Exchange
                SEDOL = 3;
                // WKN - Wertpapier Kenn-Nummer, the alphanumeric German identification number
                WKN = 4;
                // Bloomberg Ticker - Bloomberg letters code that identify a company's securities
                BBG_TICKER = 5;
                // BBGID - The Bloomberg Global ID
                BBGID = 6;
                // Reuters RIC - Reuters instrument code
                RIC = 7;
                // FIGI - Financial_Instrument Global Identifier
                FIGI = 8;
                // LEI - Legal Entity Identifier
                LEI = 9;
                // PermID - Refinitiv Permanent Identifiers
                PERM_ID = 10;
            }
            // Codification chosen to identify the share class
            ShareClassIdentifierTypes share_class_id_type = 2;
            // Extension that identifies the share class.
            // Should conform to: https://openfunds.org/OFST020050 (Share Class Extension)
            string share_class_extension = 3;
            // The number of settled units
            double settled_units = 4;
            // The number of unsettled units
            double unsettled_units = 5;
            // The nav of the subscription per unit
            google.type.Money nav_per_unit = 6;
            // The current total value of the subscription
            google.type.Money total_value = 7;
        }
        // The share of total shares - unsettled
        double percent_total_shares = 18;
        // The total value of the account
        google.type.Money account_value = 19;
        // The share of total aum - unsettled
        double percent_total_aum = 20;
        // The list of transactions made by the account
        repeated Transaction transactions = 21;
        // The date the account was created
        google.type.Date account_creation_date = 22;
        // The date the account was active and onboarded
        google.type.Date account_active_date = 23;
        // The date of the last AML refresh
        google.type.Date last_aml_refresh_date = 24;
    }
    // Definition of a transaction
    message Transaction {
        // The resource name of the client
        string account_name = 1;
        // Types of account holders
        enum AccountType {
            // AccountType unspecified
            TYPE_UNSPECIFIED = 0;
            // The account holder is a natural person
            NATURAL_PERSON = 1;
            // The account holder is a legal entity
            LEGAL_ENTITY = 2;
        }
        // The type of account
        AccountType account_type = 2;
        // The internal unique identifier of the account
        string account_id = 3;
        // The global identifier of the share class
        string share_class_id = 4;
        // Enumerations of financial identifiers
        enum ShareClassIdentifierTypes {
            // Source not specified by the user.
            IDENTIFIER_UNSPECIFIED = 0;
            // ISO 6166 code of ISIN when available
            ISIN = 1;
            // CUSIP - The Committee on Uniform Securities Identification Procedures number assigned by the CUSIP Service Bureau for U.S. and Canadian companies
            CUSIP = 2;
            // SEDOL - Stock Exchange Daily Official List for the London Stock Exchange
            SEDOL = 3;
            // WKN - Wertpapier Kenn-Nummer, the alphanumeric German identification number
            WKN = 4;
            // Bloomberg Ticker - Bloomberg letters code that identify a company's securities
            BBG_TICKER = 5;
            // BBGID - The Bloomberg Global ID
            BBGID = 6;
            // Reuters RIC - Reuters instrument code
            RIC = 7;
            // FIGI - (Financial Instrument Global Identifier). To look up the FIGI navigate to https://www.openfigi.com/.
            FIGI = 8;
            // LEI - Legal Entity Identifier
            LEI = 9;
            // PermID - (Refinitiv Permanent Identifier). To look up the PermID navigate to https://permid.org/
            PERM_ID = 10;
        }
        // Codification chosen to identify the share class
        ShareClassIdentifierTypes share_class_id_type = 5;
        // Extension that identifies the share class.
        // Should conform to: https://openfunds.org/OFST020050 (Share Class Extension)
        string share_class_extension = 6;
        // The number of settled units subscribed to or redeeemed
        double units = 7;
        // The nav of the subscription per unit at which the transaction was priced
        google.type.Money nav_per_unit = 9;
        // The current total value of the transaction
        google.type.Money total_value = 10;
        // Enumerations of transaction types
        enum TransactionType {
            // The transaction type is unspecified
            TRANSACTION_TYPE_UNSPECIFIED = 0;
            // Purchase of shares in the specified share class
            SUBSCRIPTION = 1;
            // Redemption of shares from the specified share class
            REDEMPTION = 2;
            // Movement between accounts for a single share class (ISIN), for example from PartyA to PartyB
            TRANSFER = 3;
            // Movement between share classes (i.e. ISIN) for a single account, for example PartyA switches their holdings of ShareClassA for holdings of ShareClassB
            SWITCH = 4;
        }
        // The type of transaction
        TransactionType transaction_type = 11;
        // The trade date of the transaction
        google.type.Date trade_date = 12;
        // The settlement date of the transaction
        google.type.Date settlement_date = 13;
        // Enumerations of transaction source types
        enum SourceType {
            // Source type unspecified
            SOURCE_TYPE_UNSPECIFIED = 0;
            // Fax
            FAX = 1;
            // Email
            EMAIL = 2;
            // Telephone
            TELEPHONE = 3;
            // SWIFT
            SWIFT = 4;
            // API
            API = 5;
            // BlockChain
            BLOCK_CHAIN = 6;
        }
        // The transaction source type
        SourceType source_type = 14;
        // The source of the transaction
        string source = 15;
    }
    // Definition of a Complaint
    message Complaint {
        // The date of the complaint
        google.type.Date effective_date = 1;
        // Description of the complaint
        string description = 2;
        // The account information related to the complainant (if applicable)
        Account complainant_account = 3;
        // Resolution of the complaint
        string resolution = 4;
        // Whether the complaint was upheld
        bool complaint_upheld = 5;
    }
    // Definition of a late trade events
    message LateTradeEvent {
        // The date of the event
        google.type.Date effective_date = 1;
        // Cause of the late trade
        string cause = 2;
        // Resolution of the breach and underlying source of issue
        string resolution = 3;
    }
    // Definition of a Transfer Agency Breach or Error
    message TransferAgencyBreach {
        // The date of the breach
        google.type.Date effective_date = 1;
        // The date the breach was identified
        google.type.Date identification_date = 2;
        // The date the breach was resolved
        google.type.Date resolution_date = 3;
        // Enumerations of the types of the breach or error.
        enum Type {
            SEVERITY_UNSPECIFIED = 0;
            // A breach or error the nature of which requires reporting to the regulator
            REGULATORY_BREACH = 1;
            // An breach or error that should be logged and reported internally
            INTERNAL_BREACH = 2;
            // An error that should be noted, but does not need to be reported
            ERROR = 3;
        }
        // The type of severity of the breach or error.
        Type type = 4;
        // Description of the breach
        string description = 5;
        // Whether the breach is active or not
        bool active = 6;
        // Resolution of the breach and underlying source of issue
        string resolution_commentary = 7;
    }
}

// Batch set of RT000ZR69 responses
message RT000ZR69_batch {
    repeated RT000ZR69 response = 1;
}
